!function(){"use strict";const e=function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return i||(i=Math.random().toString(36).substr(2,5)),`${e}.${i}`};class i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.initialized=!1,this.$form=e.$form,this.form=this.$form.form,this.$field=e.$field,this.successClass=this.form.getClasses("success"),this.successMessageClass=this.form.getClasses("successMessage"),this.errorClass=this.form.getClasses("error"),this.errorMessageClass=this.form.getClasses("errorMessage"),this.isVisible=!1;const i=new IntersectionObserver((e=>{0==e[0].intersectionRatio?(this.isVisible=!1,this.initialized&&this.onHide()):(this.isVisible=!0,this.initialized&&this.onShow())}),{root:this.$form});setTimeout((()=>{i.observe(this.$field)}),500)}removeSuccess(){this.$field.classList.remove(this.successClass);const e=this.$field.querySelector(`.${this.successMessageClass}`);e&&e.remove()}addSuccess(e){this.$field.classList.add(this.successClass);const i=this.$field.querySelector("[data-field-type] > div");if(!i)return console.error("Unable to find `[data-field-type] > div` to add success message.");const t=document.createElement("div");t.className=this.successMessageClass,t.textContent=e,i.appendChild(t)}removeError(){this.$field.classList.remove(this.errorClass);const e=this.$field.querySelector(`.${this.errorMessageClass}`);e&&e.remove()}addError(e){this.$field.classList.add(this.errorClass);const i=this.$field.querySelector("[data-field-type] > div");if(!i)return console.error("Unable to find `[data-field-type] > div` to add error message.");const t=document.createElement("div");t.className=this.errorMessageClass,t.textContent=e,i.appendChild(t),this.submitHandler&&this.submitHandler.formSubmitError()}updateInputs(e,i){const t=this.$field.querySelector(`[name*="${e}"]`);t&&(t.value=i)}getBillingData(){if(!this.billingDetails)return{};const e={};if(this.billingDetails.billingName){const i=this.getFieldValue(this.billingDetails.billingName);i&&(e.name=i)}if(this.billingDetails.billingEmail){const i=this.getFieldValue(this.billingDetails.billingEmail);i&&(e.email=i)}if(this.billingDetails.billingAddress){e.address={};const i=this.getFieldValue(`${this.billingDetails.billingAddress}[address1]`),t=this.getFieldValue(`${this.billingDetails.billingAddress}[address2]`),s=this.getFieldValue(`${this.billingDetails.billingAddress}[address3]`),r=this.getFieldValue(`${this.billingDetails.billingAddress}[city]`),l=this.getFieldValue(`${this.billingDetails.billingAddress}[zip]`),n=this.getFieldValue(`${this.billingDetails.billingAddress}[state]`),d=this.getFieldValue(`${this.billingDetails.billingAddress}[country]`);i&&(e.address.line1=i),t&&(e.address.line2=t),s&&(e.address.line3=s),r&&(e.address.city=r),l&&(e.address.postal_code=l),n&&(e.address.state=n),d&&(e.address.country=d)}new CustomEvent("modifyBillingDetails",{bubbles:!0,detail:{provider:this,billing:e}});return{billing_details:e}}getFieldValue(e){let i="";e=this.getFieldName(e);const t=this.getFormField(e);return t&&t.forEach((e=>"checkbox"!==e.type&&"radio"!==e.type||e.checked?i=e.value:void 0)),i}getFormField(e){let i=this.$form.querySelectorAll(`[name="${e}"]`);const t=this.$form.querySelectorAll(`[name="${e}[]"]`);return t.length&&(i=t),i}getFieldName(e){return`fields[${e=e.replace("{","").replace("}","").replace("]","").split("[").join("][")}]`}onShow(){}onHide(){}}window.FormiePaymentProvider=i;window.FormieStripe=class extends i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(e),this.$form=e.$form,this.form=this.$form.form,this.$field=e.$field,this.$input=this.$field.querySelector("[data-fui-stripe-elements]"),this.$input?(this.boundEvents=!1,this.publishableKey=e.publishableKey,this.billingDetails=e.billingDetails||{},this.hidePostalCode=e.hidePostalCode||!1,this.hideIcon=e.hideIcon||!1,this.stripeScriptId="FORMIE_STRIPE_SCRIPT",this.publishableKey?this.initialized=!0:console.error("Missing publishable key for Stripe.")):console.error("Unable to find Stripe Elements placeholder for [data-fui-stripe-elements]")}onShow(){this.initCardField()}onHide(){this.cardElement&&(this.cardElement.destroy(),this.cardElement=null,this.stripe=null,this.boundEvents=!1,this.form.removeEventListener(e("onFormiePaymentValidate","stripe")),this.form.removeEventListener(e("onAfterFormieSubmit","stripe")),this.form.removeEventListener(e("FormiePaymentStripe3DS","stripe")))}initCardField(){if(document.getElementById(this.stripeScriptId))(function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e5;const t=Date.now(),s=function(r,l){window[e]?r(window[e]):i&&Date.now()-t>=i?l(new Error("timeout")):setTimeout(s.bind(this,r,l),30)};return new Promise(s)})("Stripe").then((()=>{this.mountCard()}));else{const e=document.createElement("script");e.id=this.stripeScriptId,e.src="https://js.stripe.com/v3",e.async=!0,e.defer=!0,e.onload=()=>{this.mountCard()},document.body.appendChild(e)}this.boundEvents||(this.form.addEventListener(this.$form,e("onFormiePaymentValidate","stripe"),this.onValidate.bind(this)),this.form.addEventListener(this.$form,e("onAfterFormieSubmit","stripe"),this.onAfterSubmit.bind(this)),this.form.addEventListener(this.$form,e("FormiePaymentStripe3DS","stripe"),this.onValidate3DS.bind(this)),this.boundEvents=!0)}mountCard(){this.stripe=Stripe(this.publishableKey);const e=this.stripe.elements(),i={classes:{focus:"StripeElement--focus fui-focus",invalid:"StripeElement--invalid fui-error"},hidePostalCode:this.hidePostalCode,iconStyle:"default",hideIcon:this.hideIcon},t=new CustomEvent("beforeInit",{bubbles:!0,detail:{stripe:this,options:i}});this.$field.dispatchEvent(t),this.cardElement=e.create("card",i),this.cardElement.mount(this.$input)}onValidate(e){"submit"!==this.form.submitAction||e.detail.invalid||(e.preventDefault(),this.submitHandler=e.detail.submitHandler,this.removeError(),this.stripe.createPaymentMethod("card",this.cardElement,this.getBillingData()).then((e=>{if(e.error)return this.addError(e.error.message);this.updateInputs("stripePaymentId",e.paymentMethod.id),this.submitHandler.submitForm()})))}addLoading(){this.form.formTheme&&this.form.formTheme.addLoading()}removeLoading(){this.form.formTheme&&this.form.formTheme.removeLoading()}onValidate3DS(e){const{data:i}=e.detail;this.addLoading(),i.subscription_id?this.stripe.handleCardPayment(i.client_secret).then((e=>{if(this.removeError(),e.error)return this.removeLoading(),this.addError(e.error.message);this.updateInputs("stripeSubscriptionId",i.subscription_id),this.submitHandler.submitForm()})):this.stripe.handleCardAction(i.client_secret).then((e=>{if(this.removeError(),e.error)return this.removeLoading(),this.addError(e.error.message);this.updateInputs("stripePaymentIntentId",e.paymentIntent.id),this.submitHandler.submitForm()}))}onAfterSubmit(e){this.cardElement&&this.cardElement.clear(),this.updateInputs("stripePaymentId",""),this.updateInputs("stripePaymentIntentId",""),this.updateInputs("stripeSubscriptionId","")}}}();